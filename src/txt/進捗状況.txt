@改良
2015.06.30 　制限時間のプログラム制作

2015.07.03   制限時間のプログラム実装

2015.07.04 　ソースファイルの分割
	  　六角形生成のプログラム実装
	  　パネルを円、正方形から六角形に変更
	　　文字の表示バグを解消
	　　背景の変更
　　　　　　　　 バグの発見・・・解答時に背景の700*700以外の場所をクリックしてしまうとArrayOut関連のエラーが起きることを確認。
	　　タイトル画面の実装
　　　　　　　　 画面遷移の構想完了
		タイトル・・・ルール・・・ゲーム画面・・・曲名・・・結果・・・エンディング
		　完成　　　　 完成　　　　　完成　　　　 完成    　完成　 　 いつでもおｋ 

2015.07.05    各状態の表示実装
	　　細かなパラメータの調整
	    タイマが0になった時に解答しようとすると、最初のみ解答音が2度なるバグを発見
	　　mousePressedでのパネルの座標のバグ(昨日の)を特定、修正を早急に。
　　　　　　　　 try〜catchの実装

2015.07.08    パネルがすべて埋まってしまった際に、結果画面に移行するアルゴリズム考案。

2015.07.11    8日のプログラムを実装。
	　　ビジュアライザのプログラム考案、および実装。
	　　背景の調整

2015.07.14   座標エラーのバグの解消。以下ソース

	boolean ClickFlg = false;
	//オセロの判定分前に以下を追加	

         //////////////////////// 座標エラー回避 //////////////////////////    
               if( mouseX <= 700 && mouseY <= 700 ) {
                    ClickFlg = true;
               } else if( mouseX > 700 && mouseY > 700 ) {
                    ClickFlg = false; 
               }
         /////////////////////////////////////////////////////////////////    


////////////////////////////////////////////////////
結果表示の案1

public void result() { // パネルがすべて埋まってしまって、
				// かつ結果表示対応のキーが押下された場合に呼び出し。
	String res = new String("RESULT!");
	
	text(res, 0, 0); //暫定版
	//考えとしては、１〜６番の点数パネルを横に並べて
	//枚数で降順に並べてあげて、順位を決める感じで。
	hexPanel();
	
}

////////////////////////////////////////////////////

2015.09.17
	曲の編集を班で始めた。
	デバッグの続きを進めた。

2015.09.20
	Result画面の実装
	パネルの得点を降順ソートするためのクラスを考案および実装(Bubble.pde)
	
2015.09.21
	ReadMe.txtの記述
	ソースコードの整理
	曲名の表示(MusicName.pde)
	substringで解決っ☆
	
	曲名の表示の時にサビを再生するためにFileListクラスを少し弄った。
	残りはUndoクラスの実装だけかな？
	
2015.09.23
	Undoクラスの構想・・・
	配列を駆使して、現在のパネルの情報を別の配列にコピーして、取り出すという方法を考えた。
	結果としては、10回ほど戻れるように3次元配列にしてみた。
	だが、現在の配列の状況をうまくコピーできていないので、まだ完璧には実装はできていない模様。
	後日、また考えるようにしたいと思う。
	
2015.09,24
　　Undoの機能を実装完了。
　　昨日は2次元配列を2つ、3次元配列を1つ使ってマップを保存しようとしていたが、
　　よくよく考えてみたら、キュースタックの理論を使えば簡単に実装できることに気が付いた。
　　以下ソース
　　//////////////////////////////////////////////
	// 現在のマップ情報
	//////////////////////////////////////////////
	public class nowMap {
	  private int[][][] stack; //マップ情報を保存するための配列 
	  
	  public nowMap(){
	    stack = new int[25][5][5]; //25個までスタック可能?? 
	    init();
	  }
	  
	  public void showMap(){ //マップ情報の表示メソッド
	    for(int y = 0; y < 5; ++y) { 
	      for(int x = 0; x < 5; ++x) {
	        System.out.print(map[y][x] + " ");
	      }
	      System.out.print("\n");
	    }
	  }
	  
	  public void pushMap() { //現在のマップ情報を保存用配列に
	    ++UndoCount;
	    for(int y = 0; y < 5; ++y) { 
	      for(int x = 0; x < 5; ++x) {
	        stack[UndoCount][y][x] = map[y][x];
	      }
	    }
	  } 
	  
	  public void popMap() {
	    if(UndoCount >= 0)
	      --UndoCount;
	    else if(UndoCount < 0)
	      UndoCount = 0;
	      
	    for(int y = 0; y < 5; ++y) { 
	      for(int x = 0; x < 5; ++x) {
	        if(UndoCount >= 0)
	          map[y][x] = stack[UndoCount][y][x];
	      }
	    }
	  }
	  
	  private void init(){
	    for(int y = 0; y < 5; y++) {
	      for(int x = 0; x < 5; x++) {
	        for(int z = 0; z < 25; ++z) {
	          stack[z][y][x] = 255;
	        }
	      }   
	    }
	  }
	}
 ////////////////////////ここまで
 
 後は、細かいところの調整だけかなぁ？
 バグ発見。アタックチャンスの時だけ動作が重くなる。
 早急に解決せよ。
 
 
 2015.09.25
 昨日のバグはなんか解決した。
 パネルの外にメッセージを持って行ってあげたら動作は今まで通りスムーズにいくようになった。
 
 Result画面の時、パネルの枚数は降順にできてたけど、色は対応していなかったので
 対応させました。
 後は、パネルが一番多かった人を1位と仮定して、何番が1位か表示できるようにBubble.pdeを改良した。
 
 
2015.10.22
 Arduino(学校)がボタン1のみ誤動作するバグが発生。
 発表用のPCの画面サイズにイントロ本体のサイズが合っておらず、リサイズを余儀なくされた。
 
2015.10.23
 マイコンを変えてみるも、同現象を確認。
 よって、自宅のマイコンを来週月曜に持参する。
 
2015.10.24
 イントロ本体のサイズ(900, 900)から(750, 750)にリサイズ完了。
 座標のエラーが出たりした。
 
2015.10.25
 大方のデバッグを完了。
 ReSize版のテストを学校でプレイするのみ。
 後は、マイコンが正常に動作してくれるのを祈ろう。。。
 
 MusicNameを表示する際に、名前が長すぎて見えなかったため、アニメーション機能として
 MusicNameAnimationを実装。
 イントロの制限時間を30秒に延長した。

2015.10.30
 
 
 
 
 
 
 
 
 
		
		
		　　　　　　　　　


		　　

		　　


		